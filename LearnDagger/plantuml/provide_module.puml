@startuml
hide empty members
hide empty fields

interface Pump{
    + void pump()
}

interface Heater{
    + void on();
    + void off();
    + boolean isHot();
}

class CoffeeApp #red

interface CoffeeShop

class DripCoffeeModule{
    ~ static Heater provideHeater()
    ~ static Pump providePump(Thermosiphon pump)
}

class ElectricHeater

class Thermosiphon{
    - Heater heater
    + void pump()
}

interface Provider<T> #PaleGreen{
    + T get();
}
interface Factory<T> #PaleGreen

class DaggerCoffeeShop #PaleGreen
class DripCoffeeModule_ProvideHeaterFactory<Heater> #PaleGreen
class DripCoffeeModule_ProvidePumpFactory<Pump> #PaleGreen
'class Thermosiphon_Factory<Thermosiphon> #PaleGreen
class Builder #PaleGreen

'Thermosiphon_Factory ..> Thermosiphon
DripCoffeeModule ..> Thermosiphon
DripCoffeeModule ..> ElectricHeater
DaggerCoffeeShop ..> DripCoffeeModule_ProvideHeaterFactory
DaggerCoffeeShop ..> DripCoffeeModule_ProvidePumpFactory
DaggerCoffeeShop ..> Thermosiphon
CoffeeApp ..> Builder
Builder ..> DaggerCoffeeShop
DaggerCoffeeShop ..|> CoffeeShop
Factory --|> Provider
'Thermosiphon_Factory -up-> Provider:Heater
DripCoffeeModule_ProvideHeaterFactory ..|> Factory
DripCoffeeModule_ProvideHeaterFactory ..> DripCoffeeModule
DripCoffeeModule_ProvidePumpFactory ..|> Factory
DripCoffeeModule_ProvidePumpFactory ..> DripCoffeeModule
CoffeeShop ..> Pump
Thermosiphon ..|> Pump
Thermosiphon --> Heater
ElectricHeater ..|> Heater


@enduml